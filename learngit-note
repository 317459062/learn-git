# Git学习笔记
## Git是分布式版本控制系统
相对集中式版本控制系统的优点
* 无需联网，
* 没有“中央服务器”，更安全
* 每个开发人员本地都有一个带有历史纪录的版本库
## 安装Git
## Git配置
```
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
```
** 注意 ** `--global`参数表示你这台机器上所有的Git仓库都会使用这个配置
## 创建版本库
* 切换一个合适目录，如
`cd d:`
* 新建库名
`mkdir <repository-name>`
* 进入库内
`cd <repository-name>`
* 初始化库
`git init`
** 补充 **
`pwd`显示路径，`ls`显示当前目录，`ls -ah`显示隐藏目录
** 使用vim编辑器 **
* `vi <file-name>`新建或修改文件
* 按`i`进入编辑
* 编辑完成后按`ESC`，然后选择以下某个命令
命令|效果
--|--
:w|保存文件，不退出vi
:w <file-name>|另存为file,不退出
:w!|强制保存，不退出
:wq|保存文件，退出
:wq!|强制保存，退出
:q|不保存，退出
:q!|不保存，强制退出
:e!|放弃所有修改，回到上次保存文件开始编辑
## 把文件添加到版本库
```
$ git add <file-name>
$ git commit -m "message"
```
** 注意 **可以多次`git add `，最后一次`git commit`
## 查看仓库当前状态
`git status`
##时光穿梭
*穿梭命令
`git reset --hard commit-id`
* 确定commit-id
1、版本回退
`git log`|查看提交历史
`git log --pretty=oneline`|简化显示
2、重返未来
`git reflog`|查看命令历史
*用`HEAD`表示的`commit-id`
`HEAD`|当前版本
`HEAD^`|上个版本
`HEAD^^`|上上个版本
`HEAD~100`|往上100个版本
##工作区与暂存区

